/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** Default Page */
    get: operations["default_page__get"];
  };
  "/stance": {
    /** Add Stance */
    post: operations["add_stance_stance_post"];
  };
  "/stance/{stance_id}/user-post": {
    /** Add User Post Stance */
    post: operations["add_user_post_stance_stance__stance_id__user_post_post"];
  };
  "/topic": {
    /** Browse Topic */
    get: operations["browse_topic_topic_get"];
  };
  "/topic/{topic_id}": {
    /** Read Topic */
    get: operations["read_topic_topic__topic_id__get"];
  };
  "/topic/{topic_id}/post": {
    /** Browse Posts In Topic */
    get: operations["browse_posts_in_topic_topic__topic_id__post_get"];
  };
  "/topic/{topic_id}/user": {
    /** Browse Users In Topic */
    get: operations["browse_users_in_topic_topic__topic_id__user_get"];
  };
  "/topic/{topic_id}/stance": {
    /** Get Topic Stance */
    get: operations["get_topic_stance_topic__topic_id__stance_get"];
  };
  "/user/{user_id}": {
    /** Read User Info */
    get: operations["read_user_info_user__user_id__get"];
  };
  "/user/{user_id}/post": {
    /** Browse User Posts */
    get: operations["browse_user_posts_user__user_id__post_get"];
  };
  "/user/{user_id}/comment": {
    /** Browse User Comments */
    get: operations["browse_user_comments_user__user_id__comment_get"];
  };
  "/user/{user_id}/topic": {
    /** Browse User Topics */
    get: operations["browse_user_topics_user__user_id__topic_get"];
  };
  "/user": {
    /** Browse User */
    get: operations["browse_user_user_get"];
  };
  "/active-user": {f
    /** Browse Active User */
    get: operations["browse_active_user_active_user_get"];
  };
  "/user/{user_id}/topic_stance": {
    /** Get User Topic Stance */
    get: operations["get_user_topic_stance_user__user_id__topic_stance_get"];
  };
  "/user/{user_id}/user-group": {
    /** Read User User Group */
    get: operations["read_user_user_group_user__user_id__user_group_get"];
  };
  "/user-graph": {
    /** Browse User Graph */
    get: operations["browse_user_graph_user_graph_get"];
  };
  "/user-graph/neighbor": {
    /** Read User Neighbor */
    get: operations["read_user_neighbor_user_graph_neighbor_get"];
  };
  "/user-group/{group_id}": {
    /** Read User Group */
    get: operations["read_user_group_user_group__group_id__get"];
  };
  "/user-group/{group_id}/user-graph": {
    /** Read User Graph By Group Id */
    get: operations["read_user_graph_by_group_id_user_group__group_id__user_graph_get"];
  };
  "/user-group/{group_id}/active-user": {
    /** Browse Active User By Group Id */
    get: operations["browse_active_user_by_group_id_user_group__group_id__active_user_get"];
  };
  "/user-group/{group_id}/stance": {
    /** Browse Topic Stance By Group Id */
    get: operations["browse_topic_stance_by_group_id_user_group__group_id__stance_get"];
  };
  "/user-group/{group_id}/active-topic": {
    /** Browse User Group Active Topic */
    get: operations["browse_user_group_active_topic_user_group__group_id__active_topic_get"];
  };
  "/train-record": {
    /** Browse Train Record Date */
    get: operations["browse_train_record__get_train_record"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * ActiveUserType
     * @enum {string}
     */
    ActiveUserType: "POST" | "COMMENT";
    /** AddStanceInput */
    AddStanceInput: {
      /** Topic Id */
      topic_id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** AddStanceOutput */
    AddStanceOutput: {
      /** Id */
      id: number;
    };
    /** AddUserPostStanceInput */
    AddUserPostStanceInput: {
      /** User Id */
      user_id: string;
      /** Post Id */
      post_id: string;
    };
    /**
     * BrowsePostsInTopicSort
     * @enum {string}
     */
    BrowsePostsInTopicSort: "HYBRID" | "RELATIVE" | "POPULAR" | "TIME";
    /** BrowseTopic */
    BrowseTopic: {
      /** Id */
      id: number;
      /** Size */
      size: number;
      /** Keywords */
      keywords: components["schemas"]["Keyword"][];
    };
    /** BrowseTopicOutput */
    BrowseTopicOutputOutput: {
      /** Topics */
      topics: components["schemas"]["BrowseTopic"][];
    };
    /** BrowseTopicStanceByGroupIdOutput */
    BrowseTopicStanceByGroupIdOutput: {
      /** Topics */
      topics: components["schemas"]["processor__http__user_group__TopicOutput"][];
    };
    /** BrowseUserCommentsOutput */
    BrowseUserCommentsOutput: {
      /** Comments */
      comments: components["schemas"]["CommentWithPost"][];
    };
    /** BrowseUserGroupActiveTopicOutput */
    BrowseUserGroupActiveTopicOutput: {
      /** Topic Id */
      topic_id: number;
      /** Count */
      count: number;
      /** Name */
      name: string;
    };
    /** BrowseUserTopicsOutput */
    BrowseUserTopicsOutput: {
      /** Topics */
      topics: components["schemas"]["BrowseTopic"][];
    };
    /** BrowseUsersInTopicOutput */
    BrowseUsersInTopicOutput: {
      /** Users */
      users: components["schemas"]["UserStance"][];
    };
    /**
     * BrowseUsersInTopicSort
     * @constant
     */
    BrowseUsersInTopicSort: "POST";
    /** CommentWithPost */
    CommentWithPost: {
      post: components["schemas"]["UserPost"];
      comment: components["schemas"]["UserComment"];
    };
    /** GetTopicPostsOutput */
    GetTopicPostsOutput: {
      /** Total Count */
      total_count: number;
      /** Posts */
      posts: components["schemas"]["UserPost"][];
    };
    /** GetTopicStanceOutput */
    GetTopicStanceOutput: {
      /** Stances */
      stances: components["schemas"]["TopicStanceWithUserCount"][];
      /** Keywords */
      keywords: components["schemas"]["Keyword"][];
    };
    /** GetUserPostsOutput */
    GetUserPostsOutput: {
      /** Posts */
      posts: components["schemas"]["UserPost"][];
    };
    /** GetUserTopicStanceOutput */
    GetUserTopicStanceOutput: {
      /** Topics */
      topics: components["schemas"]["processor__http__user__TopicOutput"][];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Keyword */
    Keyword: {
      /** Value */
      value: number;
      /** Name */
      name: string;
    };
    /** MetaCount */
    MetaCount: {
      /** Total */
      total: number;
      /** Positive */
      positive: number;
      /** Negative */
      negative: number;
    };
    /** MetaData */
    MetaData: {
      post_count: components["schemas"]["MetaCount"];
      comment_count: components["schemas"]["MetaCount"];
      user_count: components["schemas"]["MetaCount"];
    };
    /** ReadTopicOutput */
    ReadTopicOutput: {
      /** Id */
      id: number;
      /** Keywords */
      keywords: components["schemas"]["Keyword"][];
      meta: components["schemas"]["MetaData"];
    };
    /** ReadUserGraphByGroupIdOutput */
    ReadUserGraphByGroupIdOutput: {
      /** User Graph */
      user_graph: components["schemas"]["UserGraph"][];
      /** User Group */
      user_group: components["schemas"]["UserGroupOutputOutput"][];
    };
    /** ReadUserNeighborOutput */
    ReadUserNeighborOutput: {
      /** User Id */
      user_id: string;
      count: components["schemas"]["MetaCount"];
    };
    /** ReadUserOutput */
    ReadUserOutput: {
      /** Id */
      id: string;
      /**
       * Post Count
       * @default 0
       */
      post_count: number;
      /**
       * Comment Count
       * @default 0
       */
      comment_count: number;
      /**
       * Push Count
       * @default 0
       */
      push_count: number;
      /**
       * Boo Count
       * @default 0
       */
      boo_count: number;
      /** Money */
      money: string;
      /** Login Count */
      login_count: number;
      /** Verified */
      verified: boolean;
      /** Legal Post */
      legal_post: number;
      /** Illegal Post */
      illegal_post: number;
      /** Activity */
      activity: string;
      /** Mail */
      mail: string;
      /**
       * Last Login Date
       * Format: date-time
       */
      last_login_date: string;
      /** Last Login Ip */
      last_login_ip: string;
    };
    /** StanceOutput */
    StanceOutput: {
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /**
     * StanceType
     * @enum {string}
     */
    StanceType: "POSITIVE" | "NEGATIVE" | "ALL";
    /** TopicStanceWithUserCount */
    TopicStanceWithUserCount: {
      /** Stance Id */
      stance_id: number;
      /** Topic Id */
      topic_id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** User Count */
      user_count: number;
    };
    /** User */
    User: {
      /** Id */
      id: string;
      /** Money */
      money: string;
      /** Login Count */
      login_count: number;
      /** Verified */
      verified: boolean;
      /** Legal Post */
      legal_post: number;
      /** Illegal Post */
      illegal_post: number;
      /** Activity */
      activity: string;
      /** Mail */
      mail: string;
      /**
       * Last Login Date
       * Format: date-time
       */
      last_login_date: string;
      /** Last Login Ip */
      last_login_ip: string;
    };
    /** UserComment */
    UserComment: {
      /** Author */
      author: string;
      /** Type */
      type: string;
      /**
       * Time
       * Format: date-time
       */
      time: string;
      /** Content */
      content: string;
    };
    /** UserGraph */
    UserGraph: {
      /** User Id 1 */
      user_id_1: string;
      /** User Id 2 */
      user_id_2: string;
      /** Weight */
      weight: number;
    };
    /** UserGroup */
    UserGroup: {
      /** Group Id */
      group_id: number;
      /** User Id */
      user_id: string;
    };
    /** UserGroupOutput */
    UserGroupOutputOutput: {
      /**
       * Id
       * @default
       */
      id: string;
      /**
       * Post Count
       * @default 0
       */
      post_count: number;
      /**
       * Comment Count
       * @default 0
       */
      comment_count: number;
      /**
       * Push Count
       * @default 0
       */
      push_count: number;
      /**
       * Boo Count
       * @default 0
       */
      boo_count: number;
      /** Group Id */
      group_id: number;
      /** User Id */
      user_id: string;
    };
    /** UserPost */
    UserPost: {
      /** Aid */
      aid: string;
      /** Title */
      title: string;
      /** Author */
      author: string;
      /** Url */
      url: string;
      /** Push */
      push: number;
      /** Boo */
      boo: number;
      /** Arrow */
      arrow: number;
      /**
       * Date
       * Format: date-time
       */
      date: string;
    };
    /** UserStance */
    UserStance: {
      /** Id */
      id: string;
      /** Post Count */
      post_count: number;
      /** Comment Count */
      comment_count: number;
      /** Stance */
      stance: number;
    };
    /** UserWithDataCount */
    UserWithDataCount: {
      /** Id */
      id: string;
      /** Money */
      money: string;
      /** Login Count */
      login_count: number;
      /** Verified */
      verified: boolean;
      /** Legal Post */
      legal_post: number;
      /** Illegal Post */
      illegal_post: number;
      /** Activity */
      activity: string;
      /** Mail */
      mail: string;
      /**
       * Last Login Date
       * Format: date-time
       */
      last_login_date: string;
      /** Last Login Ip */
      last_login_ip: string;
      /** Count */
      count: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** TopicOutput */
    processor__http__user__TopicOutput: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Stances */
      stances: components["schemas"]["StanceOutput"][];
      /** Score */
      score: number | null;
    };
    /** TopicOutput */
    processor__http__user_group__TopicOutput: {
      /** Name */
      name: string;
      /** Stances */
      stances: components["schemas"]["StanceOutput"][];
      /** Score */
      score: number | null;
      /** Keywords */
      keywords: components["schemas"]["Keyword"][];
    };
    /** Train Record */
    TrainRecord: {
      /** Date */
      dates: string;
    };

  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Default Page */
  default_page__get: {
    parameters: {
      header?: {
        "auth-token"?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "text/html": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Stance */
  add_stance_stance_post: {
    parameters: {
      header?: {
        user?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddStanceInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AddStanceOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add User Post Stance */
  add_user_post_stance_stance__stance_id__user_post_post: {
    parameters: {
      header?: {
        user?: string;
      };
      path: {
        stance_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddUserPostStanceInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Topic */
  browse_topic_topic_get: {
    parameters: {
      query?: {
        record_date?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseTopicOutputOutput"];
        };
      };
    };
  };
  /** Read Topic */
  read_topic_topic__topic_id__get: {
    parameters: {
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ReadTopicOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Posts In Topic */
  browse_posts_in_topic_topic__topic_id__post_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
        sort?: components["schemas"]["BrowsePostsInTopicSort"];
      };
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetTopicPostsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Users In Topic */
  browse_users_in_topic_topic__topic_id__user_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
        sort?: components["schemas"]["BrowseUsersInTopicSort"];
        stance?: components["schemas"]["StanceType"];
      };
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseUsersInTopicOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Topic Stance */
  get_topic_stance_topic__topic_id__stance_get: {
    parameters: {
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetTopicStanceOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Info */
  read_user_info_user__user_id__get: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ReadUserOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Posts */
  browse_user_posts_user__user_id__post_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetUserPostsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Comments */
  browse_user_comments_user__user_id__comment_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseUserCommentsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Topics */
  browse_user_topics_user__user_id__topic_get: {
    parameters: {
      query?: {
        record_date?: string;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseUserTopicsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User */
  browse_user_user_get: {
    parameters: {
      query?: {
        user_id?: string | null;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Active User */
  browse_active_user_active_user_get: {
    parameters: {
      query: {
        browse_type: components["schemas"]["ActiveUserType"];
        limit?: number;
        offset?: number;
        start_time?: string | null;
        end_time?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserWithDataCount"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Topic Stance */
  get_user_topic_stance_user__user_id__topic_stance_get: {
    parameters: {
      query?: {
        record_date?: string;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetUserTopicStanceOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User User Group */
  read_user_user_group_user__user_id__user_group_get: {
    parameters: {
      query?: {
        record_id?: number | null;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserGroup"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Graph */
  browse_user_graph_user_graph_get: {
    parameters: {
      query?: {
        record_id?: number | null;
        record_date?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ReadUserGraphByGroupIdOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Neighbor */
  read_user_neighbor_user_graph_neighbor_get: {
    parameters: {
      query?: {
        user_id: string;
        record_id?: number | null;
        record_date?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ReadUserNeighborOutput"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Group */
  read_user_group_user_group__group_id__get: {
    parameters: {
      query?: {
        record_id?: number | null;
        record_date?: string;
      };
      path: {
        group_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserGroupOutputOutput"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Graph By Group Id */
  read_user_graph_by_group_id_user_group__group_id__user_graph_get: {
    parameters: {
      query?: {
        record_id?: number | null;
        record_date?: string;
      };
      path: {
        group_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ReadUserGraphByGroupIdOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Active User By Group Id */
  browse_active_user_by_group_id_user_group__group_id__active_user_get: {
    parameters: {
      query?: {
        limit?: number | null;
        offset?: number | null;
        record_id?: number | null;
        record_date?: string;
      };
      path: {
        group_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserWithDataCount"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Topic Stance By Group Id */
  browse_topic_stance_by_group_id_user_group__group_id__stance_get: {
    parameters: {
      query?: {
        record_id?: number | null;
        record_date?: string;
      };
      path: {
        group_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseTopicStanceByGroupIdOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Group Active Topic */
  browse_user_group_active_topic_user_group__group_id__active_topic_get: {
    parameters: {
      query?: {
        limit?: number | null;
        offset?: number | null;
        record_id?: number | null;
        record_date?: string;
      };
      path: {
        group_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseUserGroupActiveTopicOutput"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Train Records */
  train_record_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TrainRecord"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
