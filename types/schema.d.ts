/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** Default Page */
    get: operations["default_page__get"];
  };
  "/topic": {
    /** Browse Topic */
    get: operations["browse_topic_topic_get"];
  };
  "/topic/{topic_id}": {
    /** Read Topic */
    get: operations["read_topic_topic__topic_id__get"];
  };
  "/topic/{topic_id}/post": {
    /** Browse Posts In Topic */
    get: operations["browse_posts_in_topic_topic__topic_id__post_get"];
  };
  "/topic/{topic_id}/user": {
    /** Browse Users In Topic */
    get: operations["browse_users_in_topic_topic__topic_id__user_get"];
  };
  "/user/{user_id}": {
    /** Read User Info */
    get: operations["read_user_info_user__user_id__get"];
  };
  "/user/{user_id}/post": {
    /** Browse User Posts */
    get: operations["browse_user_posts_user__user_id__post_get"];
  };
  "/user/{user_id}/comment": {
    /** Browse User Comments */
    get: operations["browse_user_comments_user__user_id__comment_get"];
  };
  "/user/{user_id}/topic": {
    /** Browse User Topics */
    get: operations["browse_user_topics_user__user_id__topic_get"];
  };
  "/user": {
    /** Browse User */
    get: operations["browse_user_user_get"];
  };
  "/active-user": {
    /** Browse Active User */
    get: operations["browse_active_user_active_user_get"];
  };
  "/topic/{topic_id}/stance": {
    /** Browse Stances for a Topic */
    get: operations["browse_topic_stance__topic_id__stance_get"];
  };
  "/user/{user_id}/topic_stance": {
    /** Browse User Stance on Topics */
    get: operations["browse_user_stance_topic__user_id__topic_stance_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * ActiveUserType
     * @enum {string}
     */
    ActiveUserType: "POST" | "COMMENT";
    /**
     * BrowsePostsInTopicSort
     * @enum {string}
     */
    BrowsePostsInTopicSort: "HYBRID" | "RELATIVE" | "POPULAR" | "TIME";
    /** BrowseTopic */
    BrowseTopic: {
      /** Id */
      id: number;
      /** Size */
      size: number;
      /** Keywords */
      keywords: components["schemas"]["Keyword"][];
    };
    /** BrowseTopicOutput */
    BrowseTopicOutputOutput: {
      /** Topics */
      topics: components["schemas"]["BrowseTopic"][];
    };
    /** BrowseUserCommentsOutput */
    BrowseUserCommentsOutput: {
      /** Comments */
      comments: components["schemas"]["CommentWithPost"][];
    };
    /** BrowseUserTopicsOutput */
    BrowseUserTopicsOutput: {
      /** Topics */
      topics: components["schemas"]["BrowseTopic"][];
    };
    /** BrowseUsersInTopicOutput */
    BrowseUsersInTopicOutput: {
      /** Users */
      users: components["schemas"]["UserStance"][];
    };
    /**
     * BrowseUsersInTopicSort
     * @constant
     */
    BrowseUsersInTopicSort: "POST";
    /** CommentWithPost */
    CommentWithPost: {
      post: components["schemas"]["UserPost"];
      comment: components["schemas"]["UserComment"];
    };
    /** GetTopicPostsOutput */
    GetTopicPostsOutput: {
      /** Total Count */
      total_count: number;
      /** Posts */
      posts: components["schemas"]["UserPost"][];
    };
    /** GetUserPostsOutput */
    GetUserPostsOutput: {
      /** Posts */
      posts: components["schemas"]["UserPost"][];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Keyword */
    Keyword: {
      /** Value */
      value: number;
      /** Name */
      name: string;
    };
    /** MetaCount */
    MetaCount: {
      /** Total */
      total: number;
      /** Positive */
      positive: number;
      /** Negative */
      negative: number;
    };
    /** MetaData */
    MetaData: {
      post_count: components["schemas"]["MetaCount"];
      comment_count: components["schemas"]["MetaCount"];
      user_count: components["schemas"]["MetaCount"];
    };
    /** ReadTopicOutput */
    ReadTopicOutput: {
      /** Id */
      id: number;
      /** Keywords */
      keywords: components["schemas"]["Keyword"][];
      meta: components["schemas"]["MetaData"];
    };
    /** TopicStance */
    TopicStance: {
      /** Stance ID */
      stance_id: number;
      /** Topic ID */
      topic_id: number;
      /** Stance Name */
      name: string;
      /** Description of the Stance */
      description: string;
    };
    /** TopicStanceOutput */
    TopicStanceOutput: {
      /** List of Stances for a Topic */
      stances: components["schemas"]["TopicStance"][];
    };
    /** UserTopicStance */
    UserTopicStance: {
      /** Topic Name */
      name: string;
      /** Stances in the Topic */
      stances: {
        /** Stance Name */
        name: string;
        /** Description of the Stance */
        description: string;
      }[];
      /** Score of the Topic */
      score: number;
    };
    /** UserTopicStanceOutput */
    UserTopicStanceOutput: {
      /** List of Topics and User's Stances */
      topics: components["schemas"]["UserTopicStance"][];
    };
    /**
     * StanceType
     * @enum {string}
     */
    StanceType: "POSITIVE" | "NEGATIVE" | "ALL";
    /** User */
    User: {
      /** Id */
      id: string;
      /** Money */
      money: string;
      /** Login Count */
      login_count: number;
      /** Verified */
      verified: boolean;
      /** Legal Post */
      legal_post: number;
      /** Illegal Post */
      illegal_post: number;
      /** Activity */
      activity: string;
      /** Mail */
      mail: string;
      /**
       * Last Login Date
       * Format: date-time
       */
      last_login_date: string;
      /** Last Login Ip */
      last_login_ip: string;
      push_count: number;
      boo_count: number;
    };
    /** UserComment */
    UserComment: {
      /** Author */
      author: string;
      /** Type */
      type: string;
      /**
       * Time
       * Format: date-time
       */
      time: string;
      /** Content */
      content: string;
    };
    /** UserPost */
    UserPost: {
      /** Aid */
      aid: string;
      /** Title */
      title: string;
      /** Author */
      author: string;
      /** Url */
      url: string;
      /** Push */
      push: number;
      /** Boo */
      boo: number;
      /** Arrow */
      arrow: number;
      /**
       * Date
       * Format: date-time
       */
      date: string;
    };
    /** UserStance */
    UserStance: {
      /** Id */
      id: string;
      /** Post Count */
      post_count: number;
      /** Comment Count */
      comment_count: number;
      stance: components["schemas"]["StanceType"];
    };
    /** UserWithDataCount */
    UserWithDataCount: {
      /** Id */
      id: string;
      /** Money */
      money: string;
      /** Login Count */
      login_count: number;
      /** Verified */
      verified: boolean;
      /** Legal Post */
      legal_post: number;
      /** Illegal Post */
      illegal_post: number;
      /** Activity */
      activity: string;
      /** Mail */
      mail: string;
      /**
       * Last Login Date
       * Format: date-time
       */
      last_login_date: string;
      /** Last Login Ip */
      last_login_ip: string;
      /** Count */
      count: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Default Page */
  default_page__get: {
    parameters: {
      header?: {
        "auth-token"?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "text/html": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Topic */
  browse_topic_topic_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseTopicOutputOutput"];
        };
      };
    };
  };
  /** Read Topic */
  read_topic_topic__topic_id__get: {
    parameters: {
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ReadTopicOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Posts In Topic */
  browse_posts_in_topic_topic__topic_id__post_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
        sort?: components["schemas"]["BrowsePostsInTopicSort"];
      };
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetTopicPostsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Users In Topic */
  browse_users_in_topic_topic__topic_id__user_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
        sort?: components["schemas"]["BrowseUsersInTopicSort"];
        stance?: components["schemas"]["StanceType"];
      };
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseUsersInTopicOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read User Info */
  read_user_info_user__user_id__get: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Posts */
  browse_user_posts_user__user_id__post_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetUserPostsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Comments */
  browse_user_comments_user__user_id__comment_get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseUserCommentsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Topics */
  browse_user_topics_user__user_id__topic_get: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BrowseUserTopicsOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User */
  browse_user_user_get: {
    parameters: {
      query?: {
        user_id?: string | null;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Active User */
  browse_active_user_active_user_get: {
    parameters: {
      query: {
        browse_type: components["schemas"]["ActiveUserType"];
        limit?: number;
        offset?: number;
        start_time?: string | null;
        end_time?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserWithDataCount"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse Stances for a Topic */
  browse_topic_stance__topic_id__stance_get: {
    parameters: {
      path: {
        topic_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TopicStanceOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Browse User Stance on Topics */
  browse_user_stance_topic__user_id__topic_stance_get: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserTopicStanceOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
